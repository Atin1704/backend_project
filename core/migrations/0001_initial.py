# Generated by Django 5.2 on 2025-04-12 16:38

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(db_column='firstname', max_length=50)),
                ('lastName', models.CharField(blank=True, db_column='lastname', max_length=50, null=True)),
                ('emailID', models.EmailField(db_column='emailid', max_length=100, unique=True)),
                ('password', models.CharField(db_column='password', max_length=15, validators=[django.core.validators.MinLengthValidator(8)])),
                ('role', models.CharField(blank=True, db_column='role', max_length=50, null=True)),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_column='username', max_length=50, unique=True)),
                ('password', models.CharField(db_column='password', max_length=15, validators=[django.core.validators.MinLengthValidator(8)])),
                ('firstName', models.CharField(db_column='firstname', max_length=50)),
                ('lastName', models.CharField(blank=True, db_column='lastname', max_length=50, null=True)),
                ('emailID', models.EmailField(blank=True, db_column='emailid', max_length=100, null=True, unique=True)),
                ('contactNo', models.CharField(blank=True, db_column='contactno', max_length=15, null=True, unique=True)),
                ('dob', models.DateField(blank=True, db_column='dob', null=True)),
                ('walletCash', models.DecimalField(db_column='walletcash', decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_column='username', max_length=50, unique=True)),
                ('firstName', models.CharField(db_column='firstname', max_length=50)),
                ('lastName', models.CharField(blank=True, db_column='lastname', max_length=50, null=True)),
                ('emailID', models.EmailField(db_column='emailid', max_length=100, unique=True)),
                ('contactNo', models.CharField(db_column='contactno', max_length=15, unique=True)),
                ('password', models.CharField(db_column='password', max_length=15, validators=[django.core.validators.MinLengthValidator(8)])),
                ('organization', models.CharField(blank=True, db_column='organization', max_length=100, null=True)),
                ('verificationStatus', models.BooleanField(db_column='verificationstatus', default=False)),
                ('dateOfVerification', models.DateField(blank=True, db_column='dateofverification', null=True)),
                ('staff', models.ForeignKey(blank=True, db_column='staffid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.admin')),
            ],
            options={
                'db_table': 'organizer',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventName', models.CharField(db_column='eventname', max_length=100)),
                ('ticketPrice', models.DecimalField(db_column='ticketprice', decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('category', models.CharField(db_column='category', max_length=50)),
                ('maxAttendees', models.IntegerField(blank=True, db_column='maxattendees', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('startDate', models.DateField(db_column='startdate')),
                ('startTime', models.TimeField(db_column='starttime')),
                ('endDate', models.DateField(db_column='enddate')),
                ('endTime', models.TimeField(db_column='endtime')),
                ('ticketsSold', models.IntegerField(db_column='ticketssold', default=0)),
                ('status', models.CharField(db_column='status', default='Upcoming', max_length=50)),
                ('organizer', models.ForeignKey(blank=True, db_column='organizerid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.organizer')),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method_of_payment', models.CharField(choices=[('Credit Card', 'Credit Card'), ('Debit Card', 'Debit Card'), ('UPI', 'UPI'), ('Net Banking', 'Net Banking'), ('Wallet', 'Wallet')], db_column='methodofpayment', max_length=50)),
                ('amount', models.DecimalField(db_column='amount', decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('date_of_payment', models.DateTimeField(auto_now_add=True, db_column='dateofpayment')),
                ('status', models.CharField(choices=[('Processed', 'Processed'), ('Error', 'Error'), ('Refunded', 'Refunded')], db_column='status', default='Processed', max_length=10)),
                ('event', models.ForeignKey(db_column='eventid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event')),
                ('user', models.ForeignKey(db_column='userid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.user')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(db_column='eventid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event')),
                ('transaction', models.ForeignKey(db_column='transactionid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.transaction')),
                ('user', models.ForeignKey(db_column='userid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.user')),
            ],
            options={
                'db_table': 'registration',
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('street', models.CharField(db_column='street', max_length=255)),
                ('city', models.CharField(db_column='city', max_length=100)),
                ('state', models.CharField(db_column='state', max_length=100)),
                ('pincode', models.CharField(db_column='pincode', max_length=10, validators=[django.core.validators.RegexValidator('^\\d{5,10}$')])),
            ],
            options={
                'db_table': 'venue',
                'unique_together': {('name', 'street', 'city', 'state', 'pincode')},
            },
        ),
        migrations.AddField(
            model_name='event',
            name='venue',
            field=models.ForeignKey(blank=True, db_column='venueid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.venue'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rating', models.IntegerField(blank=True, db_column='rating', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('Comments', models.TextField(blank=True, db_column='comments', null=True)),
                ('Created_At', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('event', models.ForeignKey(db_column='eventid', on_delete=django.db.models.deletion.CASCADE, to='core.event')),
                ('user', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
            options={
                'db_table': 'feedback',
                'unique_together': {('user', 'event')},
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Created_At', models.DateTimeField(auto_now_add=True, db_column='createdat')),
                ('Description', models.TextField(db_column='description')),
                ('Status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Resolved', 'Resolved'), ('Dismissed', 'Dismissed')], db_column='status', max_length=50, null=True)),
                ('Category', models.CharField(choices=[('Event Issues', 'Event Issues'), ('Ticketing Problems', 'Ticketing Problems'), ('App & Tech Issues', 'App & Tech Issues'), ('Safety & Security', 'Safety & Security'), ('Service & Hospitality', 'Service & Hospitality'), ('Other', 'Other')], db_column='category', max_length=100)),
                ('staff', models.ForeignKey(blank=True, db_column='staffid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.admin')),
                ('event', models.ForeignKey(db_column='eventid', on_delete=django.db.models.deletion.CASCADE, to='core.event')),
                ('user', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
            options={
                'db_table': 'complaint',
                'unique_together': {('user', 'event', 'Category')},
            },
        ),
    ]
